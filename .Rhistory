devtools::load_all()
devtools::use_testthat()
devtools::use_test("pairwisePCoA")
library(devtools)
?load_all
devtools::use_gpl3_license()
devtools::uses_testthat()
install.packages("devtools")
devtools::load_all()
install.packages("usethis")
usethis::use_gpl3_license()
use_gpl3_license()
libary(usethis)
library(usethis)
use_agpl3_license()
?use_agpl3_license
use_gpl3_license(name = find_name())
use this::use_gpl3_license(name = "Jung-jin Lee")
usethis::use_gpl3_license(name = "Jung-jin Lee")
devtools::load_all()
devtools::use_testthat()
devtools::uses_testthat()
?uses_testthat
?use_test
usethis::use_test("pairwisePCoA")
test_check("pairwisePCoA")
test_that("multiplication works", {
expect_equal(2 * 2, 4)
})
?test-that
?test-that
?test_that
?context
library(usetest)
?test_that
libary(testthat)
library(testthat)
test_that("multiplication works", {
expect_equal(2 * 2, 4)
})
test_that("multiplication works", {
expect_equal(2 * 2, 4)
})
v
expect_equal(2 * 2, 4)
expect_equal(2 * 2, 5)
test_that("multiplication works", {
expect_equal(2 * 2, 4)
})
test_that("multiplication works", {
expect_equal(2 * 2, 5)
})
usethis::use_test("dists")
devtools::test()
devtools::test()
devtools::document()
devtools::document()
devtools::install("pairwisePCoA")
devtools::install()
installed.packages()
library("pairwisePCoA")
pairwise_beta_plot()
library(devtools)
?install
?unlist()
l1 <- list(a = "a", b = 2, c = pi+2i)
unlist(l1) # a character vector
